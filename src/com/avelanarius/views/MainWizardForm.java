package com.avelanarius.views;

import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3Client;
import com.amazonaws.services.s3.model.CannedAccessControlList;
import com.amazonaws.services.s3.model.ObjectMetadata;
import com.amazonaws.services.s3.model.PutObjectRequest;
import com.avelanarius.controller.CompiledExecutableGenerator;
import com.avelanarius.controller.ExecutableGenerator;
import com.avelanarius.models.TaskSuite;
import com.avelanarius.controller.TaskSuiteZIPBuilder;
import com.avelanarius.models.TextFileInput;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.apache.commons.text.translate.UnicodeEscaper;

/**
 *
 * @author avela
 */
public class MainWizardForm extends javax.swing.JFrame {

    /**
     * Creates new form MainWizardForm
     */
    public MainWizardForm() {
        initComponents();
        this.jFileChooser = new JFileChooser();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jFieldNazwaKonfiguracji = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jAreaOpis = new javax.swing.JTextArea();
        jDalej1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jSpinnerWersja = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jDalej2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jFieldGeneratorEXE = new javax.swing.JTextField();
        jButtonChooseEXE = new javax.swing.JButton();
        jRadioEXE = new javax.swing.JRadioButton();
        jRadioKompilowalny = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        jFieldGeneratorCompiled = new javax.swing.JTextField();
        jButtonChooseCompiled = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListWejsciowe = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jFieldNazwaPlikWejsciowy = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jFieldSciezkaPlikWejsciowy = new javax.swing.JTextField();
        jButtonChoosePlikWejsciowy = new javax.swing.JButton();
        jButtonDodajAktualny = new javax.swing.JButton();
        jDalej3 = new javax.swing.JButton();
        jButtonDodajAutomatycznie = new javax.swing.JButton();
        jButtonUsunZaznaczony = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jAreaZawartoscPliku = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jButtonSaveZIP = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListPodsumowaniePliki = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jAreaPodsumowaniePlik = new javax.swing.JTextArea();
        jProgressUpload = new javax.swing.JProgressBar();
        jScrollPane6 = new javax.swing.JScrollPane();
        jAreaPodsumowanie = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OutGenerator Wizard");
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridLayout(1, 3));

        jPanel5.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/avelanarius/assets/bestOutGeneratorWizardIcon.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel5);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("<html>Witaj w Kreatorze<br> OutGenerator!</html>");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("<html>Kreator <i>OutGenerator</i> stworzy plik <b>ZIP</b> zawierający konfigurację dodanych zadań.</html>");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("<html><u>Dodaj informacje na temat tworzonej konfiguracji:</u></html>");

        jLabel5.setText("Nazwa:");

        jFieldNazwaKonfiguracji.setText("Nowa konfiguracja");

        jLabel6.setText("Opis:");

        jAreaOpis.setColumns(20);
        jAreaOpis.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jAreaOpis.setLineWrap(true);
        jAreaOpis.setRows(5);
        jAreaOpis.setText("Opis konfiguracji");
        jScrollPane1.setViewportView(jAreaOpis);

        jDalej1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jDalej1.setText("Dalej");
        jDalej1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDalej1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Wersja:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jDalej1))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFieldNazwaKonfiguracji)
                            .addComponent(jScrollPane1)
                            .addComponent(jSpinnerWersja))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jFieldNazwaKonfiguracji, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerWersja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jDalej1)
                .addContainerGap())
        );

        jPanel1.add(jPanel6);

        jTabbedPane1.addTab("Podstawowe informacje", jPanel1);

        jDalej2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jDalej2.setText("Dalej");
        jDalej2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDalej2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel7.setText("<html>Wybierz <b>plik programu</b>, który będzie odpowiedzialny za generowanie plików wejściowych. Program powienien przyjmować dane wejściowe na <i>standardowym wejściu</i> i wypisywać wynik na <i>standardowe wyjście</i>. Zalecana długość działania programu to <i>10 - 20</i> sekund. Program może wypisywać informacje raportowe, w liniach rozpoczynających się od <i>@@@@@</i>, a po nich para <i>klucz</i> (ciąg znaków) i <i>wartość</i> (liczba). </html>");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel8.setText("Generator EXE");

        jButtonChooseEXE.setText("...");
        jButtonChooseEXE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChooseEXEActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioEXE);
        jRadioEXE.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jRadioEXE.setSelected(true);
        jRadioEXE.setText("Generator EXE");
        jRadioEXE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioEXEActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioKompilowalny);
        jRadioKompilowalny.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jRadioKompilowalny.setText("Kompilowalny plik");
        jRadioKompilowalny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioKompilowalnyActionPerformed(evt);
            }
        });

        jLabel13.setText("Plik źródłowy");

        jFieldGeneratorCompiled.setEnabled(false);

        jButtonChooseCompiled.setText("...");
        jButtonChooseCompiled.setEnabled(false);
        jButtonChooseCompiled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChooseCompiledActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jDalej2))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jRadioKompilowalny, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioEXE, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jFieldGeneratorCompiled, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jFieldGeneratorEXE, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonChooseCompiled)
                            .addComponent(jButtonChooseEXE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioEXE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jFieldGeneratorEXE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonChooseEXE))
                .addGap(26, 26, 26)
                .addComponent(jRadioKompilowalny)
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jFieldGeneratorCompiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonChooseCompiled))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addComponent(jDalej2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Generator", jPanel2);

        jListWejsciowe.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListWejscioweValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jListWejsciowe);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel9.setText("<html>Wybierz <b>pliki wejściowe</b>, które będą służyły do generowania <i>plików wyjściowych.</i> Zostaną one skopiowane do konfiguracji <b>ZIP</b>.</html>");
        jLabel9.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel10.setText("Nazwa:");

        jLabel11.setText("Ścieżka:");

        jButtonChoosePlikWejsciowy.setText("...");
        jButtonChoosePlikWejsciowy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChoosePlikWejsciowyActionPerformed(evt);
            }
        });

        jButtonDodajAktualny.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonDodajAktualny.setText("Dodaj aktualny");
        jButtonDodajAktualny.setName(""); // NOI18N
        jButtonDodajAktualny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajAktualnyActionPerformed(evt);
            }
        });

        jDalej3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jDalej3.setText("Dalej");
        jDalej3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDalej3ActionPerformed(evt);
            }
        });

        jButtonDodajAutomatycznie.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonDodajAutomatycznie.setText("Dodaj automatycznie");
        jButtonDodajAutomatycznie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajAutomatycznieActionPerformed(evt);
            }
        });

        jButtonUsunZaznaczony.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jButtonUsunZaznaczony.setText("Usuń zaznaczony");
        jButtonUsunZaznaczony.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUsunZaznaczonyActionPerformed(evt);
            }
        });

        jAreaZawartoscPliku.setEditable(false);
        jAreaZawartoscPliku.setColumns(20);
        jAreaZawartoscPliku.setRows(5);
        jScrollPane5.setViewportView(jAreaZawartoscPliku);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonDodajAutomatycznie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jDalej3))
                            .addComponent(jFieldNazwaPlikWejsciowy)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jFieldSciezkaPlikWejsciowy)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonChoosePlikWejsciowy, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButtonDodajAktualny, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonUsunZaznaczony, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                    .addComponent(jScrollPane5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jFieldNazwaPlikWejsciowy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jFieldSciezkaPlikWejsciowy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonChoosePlikWejsciowy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDodajAktualny)
                    .addComponent(jButtonUsunZaznaczony))
                .addGap(10, 10, 10)
                .addComponent(jButtonDodajAutomatycznie)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jDalej3)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Pliki wejściowe", jPanel3);

        jButtonSaveZIP.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonSaveZIP.setText("Zapisz ZIP");
        jButtonSaveZIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveZIPActionPerformed(evt);
            }
        });

        jListPodsumowaniePliki.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListPodsumowaniePlikiValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jListPodsumowaniePliki);

        jAreaPodsumowaniePlik.setEditable(false);
        jAreaPodsumowaniePlik.setColumns(20);
        jAreaPodsumowaniePlik.setRows(5);
        jScrollPane4.setViewportView(jAreaPodsumowaniePlik);

        jProgressUpload.setEnabled(false);

        jAreaPodsumowanie.setEditable(false);
        jAreaPodsumowanie.setColumns(20);
        jAreaPodsumowanie.setFont(jLabel11.getFont());
        jAreaPodsumowanie.setRows(5);
        jAreaPodsumowanie.setEnabled(false);
        jScrollPane6.setViewportView(jAreaPodsumowanie);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jProgressUpload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSaveZIP))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonSaveZIP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressUpload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Podsumowanie", jPanel4);

        getContentPane().add(jTabbedPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jDalej1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDalej1ActionPerformed
        selectNextTab();
    }//GEN-LAST:event_jDalej1ActionPerformed

    private void selectNextTab() {
        this.jTabbedPane1.setSelectedIndex(this.jTabbedPane1.getSelectedIndex() + 1);
    }

    private void jDalej2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDalej2ActionPerformed
        selectNextTab();
    }//GEN-LAST:event_jDalej2ActionPerformed

    private void jButtonChooseEXEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChooseEXEActionPerformed
        if (this.jFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            this.jFieldGeneratorEXE.setText(this.jFileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_jButtonChooseEXEActionPerformed

    private void jDalej3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDalej3ActionPerformed
        selectNextTab();
    }//GEN-LAST:event_jDalej3ActionPerformed

    private void jButtonChoosePlikWejsciowyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChoosePlikWejsciowyActionPerformed
        if (this.jFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            this.jFieldNazwaPlikWejsciowy.setText(this.jFileChooser.getSelectedFile().getName());
            this.jFieldSciezkaPlikWejsciowy.setText(this.jFileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_jButtonChoosePlikWejsciowyActionPerformed

    private void jButtonDodajAktualnyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajAktualnyActionPerformed
        if (new File(this.jFieldSciezkaPlikWejsciowy.getText()).isFile()) {
            TextFileInput textFileInput = new TextFileInput();
            textFileInput.setName(this.jFieldNazwaPlikWejsciowy.getText());
            textFileInput.setPath(this.jFieldSciezkaPlikWejsciowy.getText());
            this.jFieldNazwaPlikWejsciowy.setText("");
            this.jFieldSciezkaPlikWejsciowy.setText("");
            this.textFileInputs.add(textFileInput);
            updateFileLists();
        }
    }//GEN-LAST:event_jButtonDodajAktualnyActionPerformed

    private void jButtonSaveZIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveZIPActionPerformed
        if (!sprawdzKonfiguracje()) {
            return;
        }
        jFileChooser.setSelectedFile(new File(this.jFieldNazwaKonfiguracji.getText() + ".zip"));
        if (this.jFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            if (!jFileChooser.getSelectedFile().getName().equals(this.jFieldNazwaKonfiguracji.getText() + ".zip")) {
                JOptionPane.showMessageDialog(this, "Plik wyjściowy musi mieć tą samą nazwę co nazwa konfiguracji!", "Zła nazwa pliku", JOptionPane.ERROR_MESSAGE);
                return;
            }
            TaskSuiteZIPBuilder zipBuilder = new TaskSuiteZIPBuilder();
            zipBuilder.setFilename(this.jFileChooser.getSelectedFile().getAbsolutePath());
            zipBuilder.setTaskSuite(this.getTaskSuite());
            zipBuilder.generateZIP();
            if (JOptionPane.showConfirmDialog(this, "Wysłać konfigurację do S3?", "S3 Upload", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                Runnable uploadTask = () -> {
                    this.jProgressUpload.setEnabled(true);
                    this.jProgressUpload.setIndeterminate(true);
                    this.jProgressUpload.setString("Wysyłanie...");
                    try {
                        AmazonS3 s3 = new AmazonS3Client();
                        ObjectMetadata metadata = new ObjectMetadata();
                        SimpleDateFormat sdf = new SimpleDateFormat("EEE MMM dd HH:mm:ss Z yyyy", new Locale("us"));
                        metadata.addUserMetadata("updatedAt", sdf.format(Calendar.getInstance().getTime()));
                        metadata.addUserMetadata("nazwa", this.jFieldNazwaKonfiguracji.getText());
                        UnicodeEscaper escaper = new UnicodeEscaper();
                        metadata.addUserMetadata("opis", escaper.translate(this.jAreaOpis.getText()));
                        metadata.addUserMetadata("iloscPlikow", String.valueOf(this.textFileInputs.size()));
                        metadata.addUserMetadata("wersja", String.valueOf((Integer) this.jSpinnerWersja.getValue()));
                        s3.putObject(new PutObjectRequest("outgeneratordesc", this.jFileChooser.getSelectedFile().getName(),
                                this.jFileChooser.getSelectedFile()).withCannedAcl(CannedAccessControlList.PublicRead).withMetadata(metadata));
                        JOptionPane.showMessageDialog(this, "Wysyłanie konfiguracji zakończone sukcesem!", "Powodzenie wysyłania", JOptionPane.INFORMATION_MESSAGE);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "Błąd przy wysłaniu konfiguracji!" + ex.toString(), "Błąd wysyłania", JOptionPane.ERROR_MESSAGE);
                    }
                    this.jProgressUpload.setString("");
                    this.jProgressUpload.setEnabled(false);
                    this.jProgressUpload.setIndeterminate(false);
                };
                Thread uploadThread = new Thread(uploadTask);
                uploadThread.start();
            }
        }
    }//GEN-LAST:event_jButtonSaveZIPActionPerformed

    private boolean sprawdzKonfiguracje() {
        if (this.jFieldNazwaKonfiguracji.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nazwa konfiguracji jest pusta!", "Pusta nazwa konfiguracji", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (jRadioEXE.isSelected() && !new File(this.jFieldGeneratorEXE.getText()).isFile()) {
            JOptionPane.showMessageDialog(this, "Podano nieprawidłowy plik generatora!", "Nieprawidłowy generator", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (jRadioKompilowalny.isSelected() && !new File(this.jFieldGeneratorCompiled.getText()).isFile()) {
            JOptionPane.showMessageDialog(this, "Podano nieprawidłowy plik generatora!", "Nieprawidłowy generator", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (this.textFileInputs.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nie dodano żadnych plików wejściowych!", "Brak wejścia", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private void jButtonDodajAutomatycznieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajAutomatycznieActionPerformed
        jFileChooser.setMultiSelectionEnabled(true);
        if (this.jFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            for (File file : this.jFileChooser.getSelectedFiles()) {
                TextFileInput textFileInput = new TextFileInput();
                textFileInput.setName(file.getName());
                textFileInput.setPath(file.getAbsolutePath());
                this.textFileInputs.add(textFileInput);
            }
        }
        jFileChooser.setMultiSelectionEnabled(false);
        updateFileLists();
    }//GEN-LAST:event_jButtonDodajAutomatycznieActionPerformed

    private void updateFileLists() {
        List<String> listData = this.textFileInputs.stream().map(q -> q.getName()).collect(Collectors.toList());
        this.jListWejsciowe.setListData(listData.toArray(new String[listData.size()]));
        this.jListPodsumowaniePliki.setListData(listData.toArray(new String[listData.size()]));
    }

    private void jListPodsumowaniePlikiValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListPodsumowaniePlikiValueChanged
        try {
            int selectedIndex = this.jListPodsumowaniePliki.getSelectedIndex();
            if (selectedIndex >= 0 && selectedIndex < this.textFileInputs.size()) {
                String filename = this.textFileInputs.get(selectedIndex).getPath();
                String contents = Files.lines(Paths.get(filename)).limit(500).collect(Collectors.joining(System.lineSeparator()));
                this.jAreaPodsumowaniePlik.setText(contents);
            } else {
                this.jAreaPodsumowaniePlik.setText("");
            }
        } catch (Exception ex) {
            this.jAreaPodsumowaniePlik.setText("Błąd wczytywania pliku!");
            Logger.getLogger(MainWizardForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jListPodsumowaniePlikiValueChanged

    private void jButtonUsunZaznaczonyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUsunZaznaczonyActionPerformed
        int curSelected = this.jListWejsciowe.getSelectedIndex();
        if (curSelected >= 0 && curSelected < this.textFileInputs.size()) {
            this.textFileInputs.remove(curSelected);
            updateFileLists();
        }
    }//GEN-LAST:event_jButtonUsunZaznaczonyActionPerformed

    private void jListWejscioweValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListWejscioweValueChanged
        try {
            int selectedIndex = this.jListWejsciowe.getSelectedIndex();
            if (selectedIndex >= 0 && selectedIndex < this.textFileInputs.size()) {
                String filename = this.textFileInputs.get(selectedIndex).getPath();
                String contents = Files.lines(Paths.get(filename)).limit(500).collect(Collectors.joining(System.lineSeparator()));
                this.jAreaZawartoscPliku.setText(contents);
            } else {
                this.jAreaZawartoscPliku.setText("");
            }
        } catch (Exception ex) {
            this.jAreaZawartoscPliku.setText("Błąd wczytywania pliku!");
            Logger.getLogger(MainWizardForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jListWejscioweValueChanged

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        if (jTabbedPane1.getSelectedIndex() == jTabbedPane1.getTabCount() - 1) {
            aktualizujPodsumowanie();
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jButtonChooseCompiledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChooseCompiledActionPerformed
        if (this.jFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            this.jFieldGeneratorCompiled.setText(this.jFileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_jButtonChooseCompiledActionPerformed

    private void jRadioEXEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioEXEActionPerformed
        this.jFieldGeneratorCompiled.setEnabled(false);
        this.jButtonChooseCompiled.setEnabled(false);

        this.jFieldGeneratorEXE.setEnabled(true);
        this.jButtonChooseEXE.setEnabled(true);
    }//GEN-LAST:event_jRadioEXEActionPerformed

    private void jRadioKompilowalnyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioKompilowalnyActionPerformed
        this.jFieldGeneratorCompiled.setEnabled(true);
        this.jButtonChooseCompiled.setEnabled(true);

        this.jFieldGeneratorEXE.setEnabled(false);
        this.jButtonChooseEXE.setEnabled(false);
    }//GEN-LAST:event_jRadioKompilowalnyActionPerformed

    private void aktualizujPodsumowanie() {
        StringBuilder podsumowanie = new StringBuilder();
        podsumowanie.append("Nazwa: ").append(this.jFieldNazwaKonfiguracji.getText()).append(System.getProperty("line.separator"));
        podsumowanie.append("Wersja: ").append((Integer) this.jSpinnerWersja.getValue()).append(System.getProperty("line.separator"));
        podsumowanie.append("Opis: ").append(this.jAreaOpis.getText()).append(System.getProperty("line.separator"));
        if (this.jRadioEXE.isSelected()) {
            podsumowanie.append("Generator: ").append(this.jFieldGeneratorEXE.getText()).append(System.getProperty("line.separator"));
        } else {
            podsumowanie.append("Generator: ").append(this.jFieldGeneratorCompiled.getText()).append(System.getProperty("line.separator"));
        }
        this.jAreaPodsumowanie.setText(podsumowanie.toString());
    }

    private TaskSuite getTaskSuite() {
        ExecutableGenerator executableGenerator;
        if (this.jRadioEXE.isSelected()) {
            executableGenerator = new ExecutableGenerator();
            executableGenerator.setExecutablePath(this.jFieldGeneratorEXE.getText());
        } else {
            executableGenerator = new CompiledExecutableGenerator();
            executableGenerator.setExecutablePath(this.jFieldGeneratorCompiled.getText());
        }
        TaskSuite taskSuite = new TaskSuite();
        taskSuite.setName(this.jFieldNazwaKonfiguracji.getText());
        taskSuite.setDescription(this.jAreaOpis.getText());
        taskSuite.setPath(this.jFieldNazwaKonfiguracji.getText());
        taskSuite.setExecutableGenerator(executableGenerator);
        taskSuite.setVersion((Integer) this.jSpinnerWersja.getValue());
        taskSuite.setInputFiles(this.textFileInputs);
        return taskSuite;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(
                    UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainWizardForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(MainWizardForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(MainWizardForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainWizardForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWizardForm().setVisible(true);
            }
        });
    }

    private JFileChooser jFileChooser;
    private ArrayList<TextFileInput> textFileInputs = new ArrayList<TextFileInput>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextArea jAreaOpis;
    private javax.swing.JTextArea jAreaPodsumowanie;
    private javax.swing.JTextArea jAreaPodsumowaniePlik;
    private javax.swing.JTextArea jAreaZawartoscPliku;
    private javax.swing.JButton jButtonChooseCompiled;
    private javax.swing.JButton jButtonChooseEXE;
    private javax.swing.JButton jButtonChoosePlikWejsciowy;
    private javax.swing.JButton jButtonDodajAktualny;
    private javax.swing.JButton jButtonDodajAutomatycznie;
    private javax.swing.JButton jButtonSaveZIP;
    private javax.swing.JButton jButtonUsunZaznaczony;
    private javax.swing.JButton jDalej1;
    private javax.swing.JButton jDalej2;
    private javax.swing.JButton jDalej3;
    private javax.swing.JTextField jFieldGeneratorCompiled;
    private javax.swing.JTextField jFieldGeneratorEXE;
    private javax.swing.JTextField jFieldNazwaKonfiguracji;
    private javax.swing.JTextField jFieldNazwaPlikWejsciowy;
    private javax.swing.JTextField jFieldSciezkaPlikWejsciowy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jListPodsumowaniePliki;
    private javax.swing.JList<String> jListWejsciowe;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JProgressBar jProgressUpload;
    private javax.swing.JRadioButton jRadioEXE;
    private javax.swing.JRadioButton jRadioKompilowalny;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSpinner jSpinnerWersja;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

}
